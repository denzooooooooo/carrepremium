{"ast":null,"code":"var _jsxFileName = \"/Users/angedjedjed/Desktop/dernier carre/carre-premium-frontend/src/contexts/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const API_URL = 'http://localhost:8000/api/v1';\n\n  // Configurer axios avec le token\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Charger les informations de l'utilisateur\n  const loadUser = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/profile`);\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement du profil:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Inscription\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      if (response.data.success) {\n        const {\n          user,\n          token\n        } = response.data.data;\n        setUser(user);\n        setToken(token);\n        setIsAuthenticated(true);\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return {\n          success: true,\n          user\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erreur lors de l\\'inscription',\n        errors: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.errors\n      };\n    }\n  };\n\n  // Connexion\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          user,\n          token\n        } = response.data.data;\n        setUser(user);\n        setToken(token);\n        setIsAuthenticated(true);\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return {\n          success: true,\n          user\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Erreur lors de la connexion'\n      };\n    }\n  };\n\n  // Déconnexion\n  const logout = async () => {\n    try {\n      if (token) {\n        await axios.post(`${API_URL}/auth/logout`);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion:', error);\n    } finally {\n      setUser(null);\n      setToken(null);\n      setIsAuthenticated(false);\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  };\n\n  // Mettre à jour le profil\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put(`${API_URL}/auth/profile`, profileData);\n      if (response.data.success) {\n        setUser(response.data.data);\n        return {\n          success: true,\n          user: response.data.data\n        };\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data, _error$response5, _error$response5$data;\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Erreur lors de la mise à jour',\n        errors: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.errors\n      };\n    }\n  };\n\n  // Changer le mot de passe\n  const changePassword = async (currentPassword, newPassword, newPasswordConfirmation) => {\n    try {\n      const response = await axios.put(`${API_URL}/auth/password`, {\n        current_password: currentPassword,\n        new_password: newPassword,\n        new_password_confirmation: newPasswordConfirmation\n      });\n      if (response.data.success) {\n        return {\n          success: true,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response6, _error$response6$data, _error$response7, _error$response7$data;\n      return {\n        success: false,\n        message: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Erreur lors du changement de mot de passe',\n        errors: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.errors\n      };\n    }\n  };\n\n  // Upload avatar\n  const uploadAvatar = async file => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', file);\n      const response = await axios.post(`${API_URL}/auth/avatar`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setUser({\n          ...user,\n          avatar: response.data.data.avatar\n        });\n        return {\n          success: true,\n          avatar: response.data.data.avatar\n        };\n      }\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      return {\n        success: false,\n        message: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Erreur lors de l\\'upload de l\\'avatar'\n      };\n    }\n  };\n\n  // Mot de passe oublié\n  const forgotPassword = async email => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/forgot-password`, {\n        email\n      });\n      if (response.data.success) {\n        return {\n          success: true,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      return {\n        success: false,\n        message: ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Erreur lors de la demande'\n      };\n    }\n  };\n\n  // Supprimer le compte\n  const deleteAccount = async password => {\n    try {\n      const response = await axios.delete(`${API_URL}/auth/account`, {\n        data: {\n          password\n        }\n      });\n      if (response.data.success) {\n        logout();\n        return {\n          success: true,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      return {\n        success: false,\n        message: ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Erreur lors de la suppression du compte'\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    uploadAvatar,\n    forgotPassword,\n    deleteAccount,\n    loadUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"C2GBPcEnyP9fI9twtYJJo/24Dpo=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","isAuthenticated","setIsAuthenticated","API_URL","defaults","headers","common","loadUser","response","get","data","success","error","console","logout","register","userData","post","setItem","_error$response","_error$response$data","_error$response2","_error$response2$data","message","errors","login","email","password","_error$response3","_error$response3$data","removeItem","updateProfile","profileData","put","_error$response4","_error$response4$data","_error$response5","_error$response5$data","changePassword","currentPassword","newPassword","newPasswordConfirmation","current_password","new_password","new_password_confirmation","_error$response6","_error$response6$data","_error$response7","_error$response7$data","uploadAvatar","file","formData","FormData","append","avatar","_error$response8","_error$response8$data","forgotPassword","_error$response9","_error$response9$data","deleteAccount","delete","_error$response0","_error$response0$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/angedjedjed/Desktop/dernier carre/carre-premium-frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const API_URL = 'http://localhost:8000/api/v1';\n\n  // Configurer axios avec le token\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Charger les informations de l'utilisateur\n  const loadUser = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/auth/profile`);\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement du profil:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Inscription\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData);\n      if (response.data.success) {\n        const { user, token } = response.data.data;\n        setUser(user);\n        setToken(token);\n        setIsAuthenticated(true);\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return { success: true, user };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Erreur lors de l\\'inscription',\n        errors: error.response?.data?.errors\n      };\n    }\n  };\n\n  // Connexion\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, { email, password });\n      if (response.data.success) {\n        const { user, token } = response.data.data;\n        setUser(user);\n        setToken(token);\n        setIsAuthenticated(true);\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return { success: true, user };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Erreur lors de la connexion'\n      };\n    }\n  };\n\n  // Déconnexion\n  const logout = async () => {\n    try {\n      if (token) {\n        await axios.post(`${API_URL}/auth/logout`);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion:', error);\n    } finally {\n      setUser(null);\n      setToken(null);\n      setIsAuthenticated(false);\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  };\n\n  // Mettre à jour le profil\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await axios.put(`${API_URL}/auth/profile`, profileData);\n      if (response.data.success) {\n        setUser(response.data.data);\n        return { success: true, user: response.data.data };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Erreur lors de la mise à jour',\n        errors: error.response?.data?.errors\n      };\n    }\n  };\n\n  // Changer le mot de passe\n  const changePassword = async (currentPassword, newPassword, newPasswordConfirmation) => {\n    try {\n      const response = await axios.put(`${API_URL}/auth/password`, {\n        current_password: currentPassword,\n        new_password: newPassword,\n        new_password_confirmation: newPasswordConfirmation\n      });\n      if (response.data.success) {\n        return { success: true, message: response.data.message };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Erreur lors du changement de mot de passe',\n        errors: error.response?.data?.errors\n      };\n    }\n  };\n\n  // Upload avatar\n  const uploadAvatar = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', file);\n      \n      const response = await axios.post(`${API_URL}/auth/avatar`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      if (response.data.success) {\n        setUser({ ...user, avatar: response.data.data.avatar });\n        return { success: true, avatar: response.data.data.avatar };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Erreur lors de l\\'upload de l\\'avatar'\n      };\n    }\n  };\n\n  // Mot de passe oublié\n  const forgotPassword = async (email) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/forgot-password`, { email });\n      if (response.data.success) {\n        return { success: true, message: response.data.message };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Erreur lors de la demande'\n      };\n    }\n  };\n\n  // Supprimer le compte\n  const deleteAccount = async (password) => {\n    try {\n      const response = await axios.delete(`${API_URL}/auth/account`, {\n        data: { password }\n      });\n      if (response.data.success) {\n        logout();\n        return { success: true, message: response.data.message };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Erreur lors de la suppression du compte'\n      };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    uploadAvatar,\n    forgotPassword,\n    deleteAccount,\n    loadUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}