{"ast":null,"code":"var _jsxFileName = \"/Users/angedjedjed/Desktop/dernier carre/carre-premium-frontend/src/contexts/CurrencyContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyContext = /*#__PURE__*/createContext();\nexport const useCurrency = () => {\n  _s();\n  const context = useContext(CurrencyContext);\n  if (!context) {\n    throw new Error('useCurrency must be used within a CurrencyProvider');\n  }\n  return context;\n};\n_s(useCurrency, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CurrencyProvider = ({\n  children\n}) => {\n  _s2();\n  const [currency, setCurrency] = useState(() => {\n    return localStorage.getItem('currency') || 'XOF';\n  });\n  const [exchangeRates, setExchangeRates] = useState({\n    XOF: 1,\n    EUR: 655.957,\n    USD: 600.000,\n    GBP: 760.000\n  });\n  useEffect(() => {\n    localStorage.setItem('currency', currency);\n  }, [currency]);\n  const currencies = [{\n    code: 'XOF',\n    symbol: 'CFA',\n    name: 'Franc CFA'\n  }, {\n    code: 'EUR',\n    symbol: '€',\n    name: 'Euro'\n  }, {\n    code: 'USD',\n    symbol: '$',\n    name: 'US Dollar'\n  }, {\n    code: 'GBP',\n    symbol: '£',\n    name: 'British Pound'\n  }];\n  const getCurrentCurrency = () => {\n    return currencies.find(c => c.code === currency) || currencies[0];\n  };\n  const formatPrice = (amount, showSymbol = true) => {\n    const currentCurrency = getCurrentCurrency();\n    const convertedAmount = amount / exchangeRates[currency];\n    const formatted = new Intl.NumberFormat('fr-FR', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(convertedAmount);\n    return showSymbol ? `${formatted} ${currentCurrency.symbol}` : formatted;\n  };\n  const convertPrice = (amount, fromCurrency = 'XOF') => {\n    const amountInXOF = amount * exchangeRates[fromCurrency];\n    return amountInXOF / exchangeRates[currency];\n  };\n  const value = {\n    currency,\n    setCurrency,\n    currencies,\n    exchangeRates,\n    getCurrentCurrency,\n    formatPrice,\n    convertPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CurrencyContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(CurrencyProvider, \"8EIDry+1ju3X/wGZi2f4HtrTo28=\");\n_c = CurrencyProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrencyProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CurrencyContext","useCurrency","_s","context","Error","CurrencyProvider","children","_s2","currency","setCurrency","localStorage","getItem","exchangeRates","setExchangeRates","XOF","EUR","USD","GBP","setItem","currencies","code","symbol","name","getCurrentCurrency","find","c","formatPrice","amount","showSymbol","currentCurrency","convertedAmount","formatted","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","convertPrice","fromCurrency","amountInXOF","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/angedjedjed/Desktop/dernier carre/carre-premium-frontend/src/contexts/CurrencyContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst CurrencyContext = createContext();\n\nexport const useCurrency = () => {\n  const context = useContext(CurrencyContext);\n  if (!context) {\n    throw new Error('useCurrency must be used within a CurrencyProvider');\n  }\n  return context;\n};\n\nexport const CurrencyProvider = ({ children }) => {\n  const [currency, setCurrency] = useState(() => {\n    return localStorage.getItem('currency') || 'XOF';\n  });\n\n  const [exchangeRates, setExchangeRates] = useState({\n    XOF: 1,\n    EUR: 655.957,\n    USD: 600.000,\n    GBP: 760.000,\n  });\n\n  useEffect(() => {\n    localStorage.setItem('currency', currency);\n  }, [currency]);\n\n  const currencies = [\n    { code: 'XOF', symbol: 'CFA', name: 'Franc CFA' },\n    { code: 'EUR', symbol: '€', name: 'Euro' },\n    { code: 'USD', symbol: '$', name: 'US Dollar' },\n    { code: 'GBP', symbol: '£', name: 'British Pound' },\n  ];\n\n  const getCurrentCurrency = () => {\n    return currencies.find(c => c.code === currency) || currencies[0];\n  };\n\n  const formatPrice = (amount, showSymbol = true) => {\n    const currentCurrency = getCurrentCurrency();\n    const convertedAmount = amount / exchangeRates[currency];\n    \n    const formatted = new Intl.NumberFormat('fr-FR', {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(convertedAmount);\n\n    return showSymbol ? `${formatted} ${currentCurrency.symbol}` : formatted;\n  };\n\n  const convertPrice = (amount, fromCurrency = 'XOF') => {\n    const amountInXOF = amount * exchangeRates[fromCurrency];\n    return amountInXOF / exchangeRates[currency];\n  };\n\n  const value = {\n    currency,\n    setCurrency,\n    currencies,\n    exchangeRates,\n    getCurrentCurrency,\n    formatPrice,\n    convertPrice,\n  };\n\n  return (\n    <CurrencyContext.Provider value={value}>\n      {children}\n    </CurrencyContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}