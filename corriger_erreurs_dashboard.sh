#!/bin/bash

echo "üîß Correction des erreurs du Dashboard..."

cd carre-premium-backend

# V√©rifier si le serveur est actif
if ! curl -s http://localhost:8000 > /dev/null 2>&1; then
    echo "‚ö†Ô∏è  Le serveur backend n'est pas actif"
    echo "D√©marrez-le avec: cd carre-premium-backend && php artisan serve"
    echo ""
    echo "Puis relancez ce script"
    exit 1
fi

echo "‚úÖ Serveur backend actif"
echo ""

# Tester le dashboard
echo "üß™ Test du dashboard..."
RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/admin/dashboard)

if [ "$RESPONSE" = "200" ]; then
    echo "‚úÖ Dashboard fonctionne correctement!"
    echo ""
    echo "üåê Acc√©dez au dashboard:"
    echo "   http://localhost:8000/admin/dashboard"
    echo ""
elif [ "$RESPONSE" = "500" ]; then
    echo "‚ùå Erreur 500 - V√©rification des logs..."
    
    # Afficher les derni√®res erreurs
    tail -20 storage/logs/laravel.log 2>/dev/null | grep -A 5 "SQLSTATE" || echo "Pas d'erreur SQL trouv√©e dans les logs"
    
    echo ""
    echo "üí° Solutions possibles:"
    echo "1. V√©rifier que toutes les migrations sont ex√©cut√©es"
    echo "2. V√©rifier les noms de colonnes dans DashboardController"
    echo "3. V√©rifier les relations dans les mod√®les"
else
    echo "‚ö†Ô∏è  Code de r√©ponse inattendu: $RESPONSE"
fi

echo ""
echo "üìä V√©rification des tables..."

# V√©rifier les tables critiques
php artisan tinker --execute="
echo 'Users: ' . \App\Models\User::count() . PHP_EOL;
echo 'Bookings: ' . \App\Models\Booking::count() . PHP_EOL;
echo 'Events: ' . \App\Models\Event::count() . PHP_EOL;
echo 'Packages: ' . \App\Models\TourPackage::count() . PHP_EOL;
echo 'FlightBookings: ' . \App\Models\FlightBooking::count() . PHP_EOL;
"

echo ""
echo "‚úÖ Script termin√©"
